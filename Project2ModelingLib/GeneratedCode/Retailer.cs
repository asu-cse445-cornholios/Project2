//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;

namespace Project2ModelingLib
{
    public class Retailer
    {
        private double _previousPrice = 0;

        private static void CallBack(OrderClass OrderObject)
        {
            DateTime timeReceive = DateTime.UtcNow;
            TimeSpan elapsedTime = timeReceive - OrderObject.CreatedTime;

            Console.WriteLine("Time of order{0}: {1}", Thread.CurrentThread.Name, elapsedTime);
        }

        public void OnPriceCut(object src, PriceCutEventArgs e) //event handler
	    {
            int numChickens;

            if (_previousPrice != 0)
            {
                numChickens = 100 + 2 * (int)(_previousPrice - e.Price);
                
                Random rand = new Random();
                OrderClass OrderObject = new OrderClass { Amount = numChickens, SenderId = Thread.CurrentThread.Name, 
                    CreatedTime = DateTime.UtcNow, CardNo = rand.Next(5000,7000)};

                //sends order to encoder
                string encoded = OrderObject.Encode();

                //send encoded string to free cell in multiCellBuffer
                MultiCellBuffer cell = new MultiCellBuffer();
                cell.SetOneCell(encoded);
            }

            _previousPrice = e.Price;

        }
    }
}
